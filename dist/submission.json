{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "ap-submissions-microservice",
    "description": "TODO: Add a description",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "api.topcoder-dev.com",
  "basePath": "/v3",
  "securityDefinitions": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/submissions/": {
      "post": {
        "description": "First step of the submission process. This creates a \"submission object\" tied to the specified reference Object. For now we only support submissions for design & develop challenges.",
        "tags": [
          "Submissions"
        ],
        "operationId": "Create / initialize a new submission_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Id of submission (UUID)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/submissions/{id}/": {
      "get": {
        "description": "Retrieves a specifc submission by id.",
        "tags": [
          "Submissions"
        ],
        "operationId": "Retrieve specific submission_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Id of submission (UUID)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/submissions/?filter=fieldName%3Dvalue&limit=100&offset=101&orderBy=order]": {
      "get": {
        "description": "Retrieves a list of submissions for logged in user. Unless logged in user is admin, in which case they have access to all submissions\nEg. /v3/submissions/?filter=reference%3D%7B%22type%22%3A%22CHALLENGE%22%2C%22id%22%3A%2230049240%22%7D",
        "tags": [
          "Submissions"
        ],
        "operationId": "List all submissions_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Id of submission (UUID)"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "parameter for filtering the fields according to v3 spec\n+ reference - URL encoded JSONObject { \"type\": {{reference_type}}, \"id\": {{refernce_id}}}, eg. { \"type\": \"CHALLENGE\", \"id\": \"111233\"}"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "createAt (ascending, descinding) (*NOT YET SUPPORTED*)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "number of messaged to be retrieved (ex: limit=100) (*NOT YET SUPPORTED*)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "pagination offset (ex: offset=101) (*NOT YET SUPPORTED*)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/submissions/{id}": {
      "put": {
        "description": "Usually used to only record updates to the submission object, such as file upload status. Only 'data' property can be updated through patch currently.",
        "tags": [
          "Submissions"
        ],
        "operationId": "Update Submission_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Id of submission (UUID)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/submissions/{id}/process": {
      "post": {
        "description": "Usually the final step of the sumission process. All data/files should be uploaded by this point. Service will validated all data provided so far and kick-off any post-processing if applicable.",
        "tags": [
          "Submissions"
        ],
        "operationId": "Create_Complete / process submission_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Id of submission (UUID)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ChallengeReference": {
      "title": "ChallengeReference",
      "type": "object",
      "properties": {
        "type": {
          "description": "+ Members \n        + CHALLENGE",
          "type": "string"
        },
        "id": {
          "description": "challenge Id",
          "type": "string"
        },
        "phaseId": {
          "description": "challenge Phase Id",
          "type": "string"
        },
        "phaseType": {
          "description": "Blah blah",
          "$ref": "#/definitions/phaseType"
        }
      },
      "required": [
        "type",
        "id",
        "phaseId",
        "phaseType"
      ]
    },
    "phaseType": {
      "title": "phaseType",
      "type": "string",
      "enum": [
        "SUBMISSION",
        "CHECKPOINT_SUBMISSION",
        "FINAL_FIX"
      ]
    },
    "UploadFile": {
      "title": "UploadFile",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of zip file to be uploaded",
          "type": "string"
        },
        "type": {
          "description": "file Type (SUBMISSION_ZIP, SOURCE_ZIP,DESIGN_COVER)",
          "type": "string"
        },
        "mediaType": {
          "description": "file media type",
          "type": "string"
        },
        "status": {
          "description": "status of the file being uploaded. (PENDING,UPLOADED)",
          "type": "string"
        },
        "presignedUrl": {
          "description": "URL where a file can be uploaded at (Generated by server)",
          "type": "string"
        },
        "path": {
          "description": "relative path of the uploaded file (Generated by server)",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "mediaType",
        "status"
      ]
    },
    "SubmissionBase": {
      "title": "Submission Base",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string"
        },
        "reference.type": {
          "description": "Members (CHALLENGE)",
          "type": "string"
        },
        "reference.id": {
          "description": "challenge Id",
          "type": "string"
        },
        "reference.phaseId": {
          "description": "challenge Phase Id",
          "type": "string"
        },
        "reference.phaseType": {
          "description": "(SUBMISSION,CHECKPOINT_SUBMISSION,FINAL_FIX)",
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "data.method": {
          "description": "An enumerated string constant that describes the submission method.(DEVELOP_CHALLENGE_ZIP_FILE - Develop zip file, DESIGN_CHALLENGE_ZIP_FILE - Design zip files)",
          "type": "string"
        },
        "data.files": {
          "description": "Array of uploaded file objects",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "data.files[].name": {
          "description": "Name of zip file to be uploaded",
          "type": "string"
        },
        "data.files[].type": {
          "description": "file Type (SUBMISSION_ZIP, SOURCE_ZIP,DESIGN_COVER)",
          "type": "string"
        },
        "data.files[].mediaType": {
          "description": "file media type",
          "type": "string"
        },
        "data.files[].status": {
          "description": "status of the file being uploaded. (PENDING,UPLOADED)",
          "type": "string"
        },
        "data.files[].presignedUrl": {
          "description": "URL where a file can be uploaded at (Generated by server)",
          "type": "string"
        },
        "data.files[].path": {
          "description": "relative path of the uploaded file (Generated by server)",
          "type": "string"
        },
        "data.submitterRank": {
          "description": "Submission rank provided by submitter. A positive number greater than 0",
          "type": "number",
          "format": "double"
        },
        "data.submitterComments": {
          "description": "comment provided submitter",
          "type": "string"
        },
        "data.fonts": {
          "description": "An array of nested Font objects. *NOTE* Designates fonts used by the submitter for the submission. An empty array implies no additional fonts were used.",
          "type": "object"
        },
        "data.fonts[].name": {
          "description": "font name",
          "type": "string"
        },
        "data.fonts[].sourceUrl": {
          "description": "Source URL of font used.",
          "type": "string"
        },
        "data.fonts[].source": {
          "description": "Source of font used.(STUDIO_STANDARD_FONTS_LIST,FONTS_DOT_COM - Fonts.com,MYFONTS - MyFonts,ADOBE_FONTS - Adobe Fonts,FONT_SHOP - Font Shop,T26_DIGITAL_TYPE_FOUNDRY -T.26 Digital Type Foundry,FONT_SQUIRREL - Font Squirrel,TYPOGRAPHY_DOT_COM - Typography.com)",
          "type": "string"
        },
        "data.stockArts[].description": {
          "description": "stock art description",
          "type": "string"
        },
        "data.stockArts[].sourceUrl": {
          "description": "stock art source url",
          "type": "string"
        },
        "data.stockArts[].fileNumber": {
          "description": "stock art file number",
          "type": "string"
        }
      },
      "required": [
        "reference",
        "reference.type",
        "reference.id",
        "reference.phaseId",
        "reference.phaseType",
        "data.method",
        "data.files[].name",
        "data.files[].type",
        "data.files[].mediaType",
        "data.files[].status",
        "data.submitterRank",
        "data.fonts",
        "data.fonts[].name",
        "data.fonts[].sourceUrl",
        "data.fonts[].source",
        "data.stockArts[].description",
        "data.stockArts[].sourceUrl",
        "data.stockArts[].fileNumber"
      ]
    }
  }
}